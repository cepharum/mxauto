doctype xml
doctype plist PUBLIC "-//Apple Inc//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"

mixin plistLabel(context)
	if context.organizationName
		key PayloadOrganization
		string context.organizationName
		key PayloadDisplayName
		string= context.organizationName + " E-Mail configuration for " + email
	else
		key PayloadDisplayName
		string= "E-Mail configuration for " + email


plist(version="1.0")
	dict
		key PayloadVersion
		integer 1
		key PayloadType
		string Configuration
		key PayloadUUID
		string= uuids.shift()
		key PayloadScope
		string User
		key PayloadIdentifier
		string= apple.identifier
		+plistLabel(apple)
		key PayloadContent
		array
			dict
				key PayloadVersion
				integer 1
				key PayloadType
				string com.apple.mail.managed
				key PayloadUUID
				string= uuids.shift()
				key PayloadIdentifier
				string= apple.identifier
				+plistLabel(apple)
				key PayloadDescription
				string= "Provides configuration for accessing mailbox of " + apple.email + "."
				key EmailAccountDescription
				string= email
				key EmailAccountName
				string= fullname
				key EmailAccountType
				string= incoming.isIMAP ? "EmailTypeIMAP" : "EmailTypePOP"
				key EmailAddress
				string= email

				key IncomingMailServerAuthentication
				string EmailAuthPassword
				key IncomingMailServerHostName
				string= incoming.hostname
				if incoming.port
					key IncomingMailServerPortNumber
					integer= incoming.port
				key IncomingMailServerUseSSL
				if String( incoming.socketType ).toUpperCase() === "SSL"
					true
				else
					false
				key IncomingMailServerUsername
				string= username

				key OutgoingMailServerAuthentication
				string EmailAuthPassword
				key OutgoingMailServerHostName
				string= outgoing.hostname
				if outgoing.port
					key OutgoingMailServerPortNumber
					integer= outgoing.port
				key OutgoingMailServerUseSSL
				if String( outgoing.socketType ).toUpperCase() === "SSL"
					true
				else
					false
				key OutgoingMailServerUsername
				string= username
				key OutgoingPasswordSameAsIncomingPassword
				if apple.differentPasswords
					false
				else
					true
